{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/content.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/log.service.ts","webpack:///./src/app/core/random.service.ts","webpack:///./src/app/core/session-manager.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/question/sigfig-question/sigfig-question.component.ts","webpack:///./src/app/question/sigfig-question/sigfig-question.component.css","webpack:///./src/app/question/sigfig-question/sigfig-question.component.html","webpack:///./src/app/question/q-insert.directive.ts","webpack:///./src/app/question/question-container/question-container.component.ts","webpack:///./src/app/question/question.module.ts","webpack:///./src/app/question/question.ts","webpack:///./src/app/question/sigfig-question/sigfig.service.ts","webpack:///./src/app/question/question-container/question-container.component.css","webpack:///./src/app/question/question-container/question-container.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 291;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 291\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { SessionManagerService } from './core/session-manager.service';\nimport { LogService } from './core/log.service';\nimport { User } from './core/user';\nimport { Question } from './question/question';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'app works!';\n  user: User;\n  errorMessage: any;\n  question: Question;\n\n  constructor(private sessionManagerService: SessionManagerService, private logService: LogService) {}\n\n  ngOnInit(): void {\n    this.logService.getUser().subscribe(\n                     user => this.user = user,\n                     error =>  this.errorMessage = <any>error\n                   );\n    //setup\n    this.sessionManagerService.setup();\n    this.sessionManagerService.question.subscribe(\n        question => this.question = question,\n        error => this.errorMessage = <any>error\n    );\n\n  }\n\n  ngOnDestroy(): void {\n    this.sessionManagerService.question.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule }       from './core/core.module';\nimport { QuestionModule } from './question/question.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    CoreModule.forRoot(),\n    QuestionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ContentService {\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/content.service.ts","import {\n  ModuleWithProviders, NgModule,\n  Optional, SkipSelf }       from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RandomService } from './random.service';\nimport { LogService } from './log.service';\nimport { ContentService } from './content.service';\nimport { SessionManagerService} from './session-manager.service';\nimport { State } from './state';\nimport { User } from './user';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    RandomService,\n    LogService,\n    ContentService,\n    SessionManagerService]\n})\nexport class CoreModule {\n  constructor (@Optional() @SkipSelf() parentModule: CoreModule) {\n  if (parentModule) {\n    throw new Error(\n      'CoreModule is already loaded. Import it in the AppModule only');\n  }\n}\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        RandomService,\n        LogService,\n        ContentService,\n        SessionManagerService\n      ]\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/core.module.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { State } from './state';\nimport { User } from './user';\n\n@Injectable()\nexport class LogService {\n  private statesUrl = '../api/student/states';\n  private actionsUrl = '../api/student/actions';\n  private userUrl = '../api/student/user';\n  constructor(private http: Http) { }\n\n  getStates(): Observable<State[]> {\n    return this.http.get(this.statesUrl)\n               .map(this.extractData)\n               .catch(this.handleError);\n  }\n  getActiveStates(): Observable<State[]> {\n    return this.http.get(this.statesUrl + '/active')\n               .map(this.extractData)\n               .catch(this.handleError);\n  }\n\n  getUser(): Observable<User> {\n    return this.http.get(this.userUrl)\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n  private extractData(res: Response) {\n    //console.log(res);\n    let body = res.json();\n    //console.log(body);\n    return body || { };\n  }\n\n  private handleError (error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/log.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RandomService {\n\n  constructor() { }\n\n  getRandomDigit(max: number, min: number): number {\n        return Math.floor(Math.random()* (max-min)) + min;\n      }\n  //gets a string of random digits, where probability of 0 is increased by zeros\n  getRandomString(length: number, zeros: number): string {\n        let randomString: string = '';\n        let min, max: number;\n        if (zeros === 0) {\n         min = 1;\n         max = 10;\n        }\n        else {\n         min = 0;\n         max = 10 + zeros;\n        }\n        for(let i: number =0; i < length; i++) {\n         let newDigit: number = this.getRandomDigit(max, min);\n         if (newDigit > 9) {newDigit = 0;}\n          randomString += newDigit;\n        }\n        return randomString;\n      }\n      getRandomExclude(max: number,excludeNum: number): number {\n        let randNumber: number = Math.floor(Math.random() * max);\n        if(randNumber === excludeNum) {\n          return this.getRandomExclude(max,excludeNum);\n        }else{\n          return randNumber;\n        }\n      }\n      getRandomNear(max: number,excludeNum: number, maxSeparation: number) {\n        let randNumber: number = Math.floor(Math.random() * max);\n        if(randNumber === excludeNum) {\n          return this.getRandomNear(max,excludeNum, maxSeparation);\n        }\n        else if (randNumber - excludeNum > maxSeparation || randNumber - excludeNum < -1 * maxSeparation) {\n          return this.getRandomNear(max,excludeNum, maxSeparation);\n        }\n        else{\n          return randNumber;\n        }\n      }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/random.service.ts","import { Injectable } from '@angular/core';\nimport { LogService } from './log.service';\nimport { State } from './state';\nimport { ContentService } from './content.service';\nimport { Question } from '../question/question';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { StudyItem } from '../shared/study-item';\nimport { Grade } from '../shared/grade';\nimport { SigfigQuestionComponent } from '../question/sigfig-question/sigfig-question.component';\n\n\n@Injectable()\nexport class SessionManagerService {\n\n  constructor(private logService: LogService, private contentService: ContentService) { }\n\n  states: State[];\n  errorMessage: any;\n  currentQuestion: Question;\n  question = new Subject<Question>();\n  studyItemArray: StudyItem[];\n\n  setup(): void {\n    this.logService.getActiveStates().subscribe(\n                     states => this.states = states,\n                     error =>  this.errorMessage = <any>error\n                   );\n\n    //setup studyItemArray\n    //get first question\n    this.currentQuestion.component = SigfigQuestionComponent;\n    this.currentQuestion.data = {question: {number: 340, hint: \"\"}, answer: 2};\n    this.question.next(this.currentQuestion);\n  }\n\n  change(grade: Grade):  void {\n    //update studyItemArray\n    //log state update, actions\n    //choose new question\n    this.question.next(this.currentQuestion);\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/core/session-manager.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 461\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n<p>Changes still showing</p>\\n<p *ngIf=\\\"user\\\">Hello {{user.name}}</p>\\n<app-question-container *ngIf=\\\"question\\\" [question]=\\\"question\\\"></app-question-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 464\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sigfig-question',\n  templateUrl: './sigfig-question.component.html',\n  styleUrls: ['./sigfig-question.component.css']\n})\nexport class SigfigQuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/sigfig-question/sigfig-question.component.ts","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question/sigfig-question/sigfig-question.component.css\n// module id = 491\n// module chunks = 1","module.exports = \"<div class=\\\"alert\\\" role=\\\"alert\\\" *ngIf=\\\"answer.message\\\" [ngClass]=\\\"answer.correct\\\">\\n  {{ answer.message }}\\n        </div><br>\\n        <div class=\\\"panel panel-default\\\" *ngIf=\\\"showHint\\\">\\n          <div class=\\\"panel-body\\\">{{ question.hint }}</div>\\n        </div>\\n<p>\\n  How many sig figs does {{ question.number }} have?\\n</p>\\n<input (keyup.enter)=\\\"submit(input.value)\\\" #input placeholder=\\\"\\\"/>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question/sigfig-question/sigfig-question.component.html\n// module id = 492\n// module chunks = 1","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[q-host]'\n})\nexport class QInsertDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/q-insert.directive.ts","import { Component, Input, OnChanges, ViewChild,\n  ComponentFactoryResolver, OnDestroy } from '@angular/core';\nimport { QInsertDirective } from '../q-insert.directive';\nimport { Question } from '../question';\nimport { SessionManagerService } from '../../core/session-manager.service';\nimport { QComponent } from '../q-component';\n\n\n@Component({\n  selector: 'app-question-container',\n  templateUrl: './question-container.component.html',\n  styleUrls: ['./question-container.component.css']\n})\nexport class QuestionContainerComponent implements OnChanges, OnDestroy {\n\n  @Input() question: Question;\n  @ViewChild(QInsertDirective) qHost: QInsertDirective;\n  subscription: any;\n  interval: any;\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n    private sessionManagerService: SessionManagerService) { }\n  ngOnChanges() {\n    this.getQuestion();\n  }\n  ngOnDestroy() {\n    //clearInterval(this.interval);\n  }\n  getQuestion() {\n    let componentFactory = this._componentFactoryResolver.resolveComponentFactory(this.question.component);\n    let viewContainerRef = this.qHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<QComponent>componentRef.instance).data = this.question.data;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/question-container/question-container.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionContainerComponent } from './question-container/question-container.component';\nimport { SigfigQuestionComponent } from './sigfig-question/sigfig-question.component';\nimport { SigfigService } from './sigfig-question/sigfig.service';\nimport { QInsertDirective } from './q-insert.directive';\nimport { QComponent } from './q-component';\nimport { Question } from './question';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [QuestionContainerComponent, QInsertDirective, SigfigQuestionComponent],\n  providers: [SigfigService],\n  entryComponents: [SigfigQuestionComponent]\n})\nexport class QuestionModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/question.module.ts","import { Type } from '@angular/core';\n\n//specify the type of component and data to bind\nexport class Question {\n  constructor(public component: Type<any>, public data: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/question.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SigfigService {\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/question/sigfig-question/sigfig.service.ts","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question/question-container/question-container.component.css\n// module id = 498\n// module chunks = 1","module.exports = \"<template class=\\\"q-host\\\"></template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/question/question-container/question-container.component.html\n// module id = 499\n// module chunks = 1"],"sourceRoot":""}